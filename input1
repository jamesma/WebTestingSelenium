
//======================================== [R-1] Class Name ========================================

// (1) R-1 - Empty
// (2) Use RequirementViolationChecker.ensureOnlyNumbersAndAlphabets to check results. Throws RequirementViolationException if violation exists.
["", "Teacher 1", "Fall 2012", "1", "2", "3", "Substitute 1", "M"]

// (1) R-1 - Whitespaces
// (2) Use RequirementViolationChecker.ensureOnlyNumbersAndAlphabets to check results. Throws RequirementViolationException if violation exists.
["   ", "Teacher 1", "Fall 2012", "1", "2", "3", "Substitute 1", "M"]

// (1) R-1 - Special characters
// (2) Use RequirementViolationChecker.ensureOnlyNumbersAndAlphabets to check results. Throws RequirementViolationException if violation exists.
[" !#$%&()*+,-./:;<=>?@[\]^_`", "Teacher 1", "Fall 2012", "1", "2", "3", "Substitute 1", "M"]

// (1) R-1 - UTF-8 character U+0260 which is outside range of ASCII
// (2) Use RequirementViolationChecker.ensureOnlyNumbersAndAlphabets to check results. Throws RequirementViolationException if violation exists.
["ɠ", "Teacher 1", "Fall 2012", "1", "2", "3", "Substitute 1", "M"]

// (1) R-1 - Alphabets and special character
// (2) Use RequirementViolationChecker.ensureOnlyNumbersAndAlphabets to check results. Throws RequirementViolationException if violation exists.
["CS!", "Teacher 1", "Fall 2012", "1", "2", "3", "Substitute 1", "M"]

// (1) R-1 - Numbers and special character
// (2) Use RequirementViolationChecker.ensureOnlyNumbersAndAlphabets to check results. Throws RequirementViolationException if violation exists.
["123/", "Teacher 1", "Fall 2012", "1", "2", "3", "Substitute 1", "M"]

// (1) R-1 - Alphabets and numbers and special character
// (2) Use RequirementViolationChecker.ensureOnlyNumbersAndAlphabets to check results. Throws RequirementViolationException if violation exists.
["CS123@", "Teacher 1", "Fall 2012", "1", "2", "3", "Substitute 1", "M"]

//========================================[R-2] Section Number ========================================

// (1) R-2 - Empty
// (2) Use RequirementViolationChecker.ensureOnlyNumbers to check results. Throws RequirementViolationException if violation exists.
["CS", "Teacher 1", "Fall 2012", "", "2", "3", "Substitute 1", "M"]

// (1) R-2 - Whitespaces
// (2) Use RequirementViolationChecker.ensureOnlyNumbers to check results. Throws RequirementViolationException if violation exists.
["CS", "Teacher 1", "Fall 2012", "   ", "2", "3", "Substitute 1", "M"]

// (1) R-2 - Special characters
// (2) Use RequirementViolationChecker.ensureOnlyNumbers to check results. Throws RequirementViolationException if violation exists.
["CS", "Teacher 1", "Fall 2012", " !#$%&()*+,-./:;<=>?@[\]^_`", "2", "3", "Substitute 1", "M"]

// (1) R-2 - UTF-8 character U+0260 which is outside range of ASCII
// (2) Use RequirementViolationChecker.ensureOnlyNumbers to check results. Throws RequirementViolationException if violation exists.
["CS", "Teacher 1", "Fall 2012", "ɠ", "2", "3", "Substitute 1", "M"]

// (1) R-2 - Alphabets
// (2) Use RequirementViolationChecker.ensureOnlyNumbers to check results. Throws RequirementViolationException if violation exists.
["CS", "Teacher 1", "Fall 2012", "abc", "2", "3", "Substitute 1", "M"]

// (1) R-2 - Alphabets and numbers
// (2) Use RequirementViolationChecker.ensureOnlyNumbers to check results. Throws RequirementViolationException if violation exists.
["CS", "Teacher 1", "Fall 2012", "123abc", "2", "3", "Substitute 1", "M"]

// (1) R-2 - Numbers and special character
// (2) Use RequirementViolationChecker.ensureOnlyNumbers to check results. Throws RequirementViolationException if violation exists.
["CS", "Teacher 1", "Fall 2012", "123@", "2", "3", "Substitute 1", "M"]

//======================================== [R-3] Room Number ========================================

// (1) R-3 - Empty
// (2) Use RequirementViolationChecker.ensureOnlyNumbers to check results. Throws RequirementViolationException if violation exists.
["CS", "Teacher 1", "Fall 2012", "1", "", "3", "Substitute 1", "M"]

// (1) R-3 - Whitespaces
// (2) Use RequirementViolationChecker.ensureOnlyNumbers to check results. Throws RequirementViolationException if violation exists.
["CS", "Teacher 1", "Fall 2012", "1", "   ", "3", "Substitute 1", "M"]

// (1) R-3 - Special characters
// (2) Use RequirementViolationChecker.ensureOnlyNumbers to check results. Throws RequirementViolationException if violation exists.
["CS", "Teacher 1", "Fall 2012", "1", " !#$%&()*+,-./:;<=>?@[\]^_`", "3", "Substitute 1", "M"]

// (1) R-3 - UTF-8 character U+0260 which is outside range of ASCII
// (2) Use RequirementViolationChecker.ensureOnlyNumbers to check results. Throws RequirementViolationException if violation exists.
["CS", "Teacher 1", "Fall 2012", "1", "ɠ", "3", "Substitute 1", "M"]

// (1) R-3 - Alphabets
// (2) Use RequirementViolationChecker.ensureOnlyNumbers to check results. Throws RequirementViolationException if violation exists.
["CS", "Teacher 1", "Fall 2012", "1", "abc", "3", "Substitute 1", "M"]

// (1) R-3 - Alphabets and numbers
// (2) Use RequirementViolationChecker.ensureOnlyNumbers to check results. Throws RequirementViolationException if violation exists.
["CS", "Teacher 1", "Fall 2012", "1", "123abc", "3", "Substitute 1", "M"]

// (1) R-3 - Numbers and special character
// (2) Use RequirementViolationChecker.ensureOnlyNumbers to check results. Throws RequirementViolationException if violation exists.
["CS", "Teacher 1", "Fall 2012", "1", "123@", "3", "Substitute 1", "M"]

//======================================== [R-4] Period Number ========================================

// (1) R-4 - Empty
// (2) Use RequirementViolationChecker.ensureOnlyNumbers to check results. Throws RequirementViolationException if violation exists.
["CS", "Teacher 1", "Fall 2012", "1", "2", "", "Substitute 1", "M"]

// (1) R-4 - Whitespaces
// (2) Use RequirementViolationChecker.ensureOnlyNumbers to check results. Throws RequirementViolationException if violation exists.
["CS", "Teacher 1", "Fall 2012", "1", "2", "   ", "Substitute 1", "M"]

// (1) R-4 - Special characters
// (2) Use RequirementViolationChecker.ensureOnlyNumbers to check results. Throws RequirementViolationException if violation exists.
["CS", "Teacher 1", "Fall 2012", "1", "2", " !#$%&()*+,-./:;<=>?@[\]^_`", "Substitute 1", "M"]

// (1) R-4 - UTF-8 character U+0260 which is outside range of ASCII
// (2) Use RequirementViolationChecker.ensureOnlyNumbers to check results. Throws RequirementViolationException if violation exists.
["CS", "Teacher 1", "Fall 2012", "1", "2", "ɠ", "Substitute 1", "M"]

// (1) R-4 - Alphabets
// (2) Use RequirementViolationChecker.ensureOnlyNumbers to check results. Throws RequirementViolationException if violation exists.
["CS", "Teacher 1", "Fall 2012", "1", "2", "abc", "Substitute 1", "M"]

// (1) R-4 - Alphabets and numbers
// (2) Use RequirementViolationChecker.ensureOnlyNumbers to check results. Throws RequirementViolationException if violation exists.
["CS", "Teacher 1", "Fall 2012", "1", "2", "123abc", "Substitute 1", "M"]

// (1) R-4 - Numbers and special character
// (2) Use RequirementViolationChecker.ensureOnlyNumbers to check results. Throws RequirementViolationException if violation exists.
["CS", "Teacher 1", "Fall 2012", "1", "2", "123@", "Substitute 1", "M"]

//======================================== [R-5] All Text Box Fields ========================================

// (1) R-5 - Enclosing script tags
// (2) Use findElements(By.tagName("script")) on the class record's text field values. If script tag exists, XSS vulnerability exists.
["<script>XSS attacked</script>", "Teacher 1", "Fall 2012", "1", "2", "123", "Substitute 1", "M"]

// (1) R-5 - Enclosing script tags
// (2) Use findElements(By.tagName("script")) on the class record's text field values. If script tag exists, XSS vulnerability exists.
["CS", "Teacher 1", "Fall 2012", "<script>XSS attacked</script>", "2", "3", "Substitute 1", "M"]

// (1) R-5 - Enclosing script tags
// (2) Use findElements(By.tagName("script")) on the class record's text field values. If script tag exists, XSS vulnerability exists.
["CS", "Teacher 1", "Fall 2012", "1", "<script>XSS attacked</script>", "3", "Substitute 1", "M"]

// (1) R-5 - Enclosing script tags
// (2) Use findElements(By.tagName("script")) on the class record's text field values. If script tag exists, XSS vulnerability exists.
["CS", "Teacher 1", "Fall 2012", "1", "2", "<script>XSS attacked</script>", "Substitute 1", "M"]

//======================================== [R-6] & [R-7] ========================================

// (1) R-6, R-7 - Valid input
// (2) Use RequirementViolationChecker's ensureClassRecordAddedSuccessfully and ensureClassRecordSameAsInput to check results. Throws RequirementViolationException if violation exists.
["CS", "Teacher 1", "Fall 2012", "123", "2", "3", "Substitute 1", "M"]

// (1) R-6, R-7 - Valid input
// (2) Use RequirementViolationChecker's ensureClassRecordAddedSuccessfully and ensureClassRecordSameAsInput to check results. Throws RequirementViolationException if violation exists.
["123", "Teacher 1", "Fall 2012", "1", "123", "3", "Substitute 1", "M"]

// (1) R-6, R-7 - Valid input
// (2) Use RequirementViolationChecker's ensureClassRecordAddedSuccessfully and ensureClassRecordSameAsInput to check results. Throws RequirementViolationException if violation exists.
["CS123", "Teacher 1", "Fall 2012", "1", "2", "123", "Substitute 1", "M"]


// (1) R-6, R-7 - Valid input - Use all drop down options (NOT combinatorial)
// (2) Use RequirementViolationChecker's ensureClassRecordAddedSuccessfully and ensureClassRecordSameAsInput to check results. Throws RequirementViolationException if violation exists.
["CS", "Teacher 1", "Fall 2012", "1", "2", "3", "Substitute 1", "M"]

// (1) R-6, R-7 - Valid input - Use all drop down options (NOT combinatorial)
// (2) Use RequirementViolationChecker's ensureClassRecordAddedSuccessfully and ensureClassRecordSameAsInput to check results. Throws RequirementViolationException if violation exists.
["CS", "Teacher 2", "Spring 2013", "1", "2", "3", "Substitute 2", "T"]

// (1) R-6, R-7 - Valid input - Use all drop down options (NOT combinatorial)
// (2) Use RequirementViolationChecker's ensureClassRecordAddedSuccessfully and ensureClassRecordSameAsInput to check results. Throws RequirementViolationException if violation exists.
["CS", "Teacher 3", "Fall 2012", "1", "2", "3", "Substitute 3", "W"]

// (1) R-6, R-7 - Valid input - Use all drop down options (NOT combinatorial)
// (2) Use RequirementViolationChecker's ensureClassRecordAddedSuccessfully and ensureClassRecordSameAsInput to check results. Throws RequirementViolationException if violation exists.
["CS", "Teacher 4", "Spring 2013", "1", "2", "3", "Substitute 1", "H"]

// (1) R-6, R-7 - Valid input - Use all drop down options (NOT combinatorial)
// (2) Use RequirementViolationChecker's ensureClassRecordAddedSuccessfully and ensureClassRecordSameAsInput to check results. Throws RequirementViolationException if violation exists.
["CS", "Teacher 5", "Fall 2012", "1", "2", "3", "Substitute 2", "F"]

